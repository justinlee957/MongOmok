[{"C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\index.js":"1","C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Layout.js":"2","C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\firebase.js":"3","C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Play\\Play.js":"4","C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\App.js":"5","C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Play\\ChallengeBox.js":"6","C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Play\\BoardMsg.js":"7","C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Messages\\MessageLayout.js":"8","C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Messages\\Chatbox.js":"9","C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Messages\\Msg.js":"10","C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Messages\\Chat.js":"11","C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Play\\BoardChat.js":"12","C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Play\\Board.js":"13","C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Play\\BoardFuncs.js":"14","C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\GameProvider.js":"15","C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Play\\GameLogic.js":"16","C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\SignIn\\SignOut.js":"17","C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\SignIn\\SignIn.js":"18","C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Feed\\Feed.js":"19","C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Feed\\Post.js":"20","C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\RightSidebar\\User.js":"21","C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Feed\\Comment.js":"22","C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\RightSidebar\\OnlineSidebar.js":"23"},{"size":199,"mtime":1606511231642,"results":"24","hashOfConfig":"25"},{"size":7442,"mtime":1610957512574,"results":"26","hashOfConfig":"25"},{"size":905,"mtime":1610496891710,"results":"27","hashOfConfig":"25"},{"size":2258,"mtime":1610788614736,"results":"28","hashOfConfig":"25"},{"size":4652,"mtime":1610920850166,"results":"29","hashOfConfig":"25"},{"size":1373,"mtime":1610573001124,"results":"30","hashOfConfig":"25"},{"size":365,"mtime":1608418451793,"results":"31","hashOfConfig":"25"},{"size":1270,"mtime":1610942289583,"results":"32","hashOfConfig":"25"},{"size":1952,"mtime":1610942272757,"results":"33","hashOfConfig":"25"},{"size":352,"mtime":1608418876358,"results":"34","hashOfConfig":"25"},{"size":449,"mtime":1608415785280,"results":"35","hashOfConfig":"25"},{"size":1647,"mtime":1609891430065,"results":"36","hashOfConfig":"25"},{"size":8475,"mtime":1610788764571,"results":"37","hashOfConfig":"25"},{"size":2319,"mtime":1609897054774,"results":"38","hashOfConfig":"25"},{"size":1068,"mtime":1610145975615,"results":"39","hashOfConfig":"25"},{"size":1152,"mtime":1610265117205,"results":"40","hashOfConfig":"25"},{"size":214,"mtime":1610660746209,"results":"41","hashOfConfig":"25"},{"size":3568,"mtime":1610779286863,"results":"42","hashOfConfig":"25"},{"size":4280,"mtime":1610925391280,"results":"43","hashOfConfig":"25"},{"size":6191,"mtime":1610957986806,"results":"44","hashOfConfig":"25"},{"size":1436,"mtime":1610952578221,"results":"45","hashOfConfig":"25"},{"size":400,"mtime":1610690146658,"results":"46","hashOfConfig":"25"},{"size":1585,"mtime":1610660758217,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"ku5h30",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":12,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\index.js",[],["104","105"],"C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Layout.js",[],"C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\firebase.js",[],"C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Play\\Play.js",[],["106","107"],"C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\App.js",[],["108","109"],"C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Play\\ChallengeBox.js",["110","111"],"import accept from '../../images/accept.png'\r\nimport deny from '../../images/deny.png'\r\nimport { firestore } from '../../firebase'\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore'\r\n\r\n\r\nfunction ChallengeBox(props){\r\n    const challengeRef = firestore.collection('users').doc(props.uid).collection('challenges')\r\n    const [challenge, loading, error] = useCollectionData(challengeRef, { idField: 'id'})\r\n\r\n    return(\r\n            <div id = \"challengeBox\">\r\n                <div id = 'challengeHeader'>Challenges</div>\r\n                {challenge && challenge.length > 0 ? challenge.map(chal => <Challenge key = {chal.id} name = {chal.name} uid = {chal.id} accept = {props.accept}/>)\r\n                : <p style = {{fontSize: '20px', padding: '5px'}}>None :(</p>}\r\n            </div>\r\n    )\r\n}\r\n\r\nfunction Challenge(props){\r\n    return(\r\n        <div className = 'challengeWrapper'>\r\n            <p style = {{fontSize: '20px', paddingRight: '5px'}}>{props.name}</p>\r\n            <button className = 'challengeOptionBtn' onClick = {() => props.accept(props.uid)}><img className = 'challengeOptionIcon'src={accept} alt = \"accept\"/></button>\r\n            <button className = 'challengeOptionBtn' style = {{marginRight: '10px'}}><img className = 'challengeOptionIcon' src={deny} alt = \"deny\"/></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChallengeBox",["112","113"],"C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Play\\BoardMsg.js",[],"C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Messages\\MessageLayout.js",[],"C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Messages\\Chatbox.js",[],"C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Messages\\Msg.js",[],"C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Messages\\Chat.js",[],"C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Play\\BoardChat.js",[],"C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Play\\Board.js",["114"],"import { useEffect, useRef, useState } from 'react'\r\nimport BoardChat from './BoardChat'\r\nimport { firestore, FieldValue } from '../../firebase'\r\nimport { useGameContext } from '../../GameProvider'\r\nimport GameLogic from './GameLogic'\r\n\r\nfunction Board(props){\r\n  var [gameInfo, setGameInfo] = useState()\r\n  var [isNewGame, setIsNewGame] = useState(false)\r\n  var [turn, setTurn] = useState()\r\n  var [opponentLeft, setOpponentLeft] = useState(false)\r\n  var canvasRef = useRef()\r\n  const [placed, setPlaced, xcoord, ycoord, requestedRematch, setRequestedRematch] = useGameContext()\r\n  \r\n  function handleClick(e){\r\n    console.log('clicked', turn)\r\n    if(turn){\r\n      const rect = canvasRef.current.getBoundingClientRect()\r\n      var x = e.clientX - rect.left\r\n      var y = e.clientY - rect.top\r\n      x-=7.5\r\n      y-=7.5\r\n      plotclosestpoint(x,y)\r\n    }\r\n  }\r\n\r\n  function plotclosestpoint(x,y){\r\n    if(x > 656){\r\n      x = 656\r\n    }else if(x < 26){\r\n      x = 26\r\n    }else{\r\n      for(var i = 0; i < 20; i++){\r\n        if(xcoord[i] <= x && xcoord[i+1] >= x ){\r\n          var x1 = xcoord[i];\r\n          var x2 = xcoord[i+1];\r\n          if(x2-x > x-x1){\r\n              x = x1;\r\n          }else{\r\n              x = x2;\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if(y > 656){  \r\n      y = 656\r\n    }else if(y < 26){\r\n      y = 26\r\n    }else{\r\n      for(i = 0; i < 20; i++){\r\n        if(ycoord[i] <= y && ycoord[i+1] >= y ){\r\n          var y1 = xcoord[i]\r\n          var y2 = xcoord[i+1]\r\n        if(y2-y > y-y1){\r\n            y = y1\r\n        }else{\r\n            y = y2\r\n        }\r\n          break\r\n        }\r\n      }\r\n    }\r\n    \r\n    if(placed[(y-26)/35][(x-26)/35] !== 0){\r\n        return\r\n    }\r\n    drawPiece(x, y, props.gameData.color)\r\n    setTurn(false)\r\n    // console.log(x, y)\r\n    // console.log((x-26)/35, (y-26)/35)\r\n    firestore.collection('games').doc(props.gameData.docID).collection('moves').add({\r\n      x,\r\n      y,\r\n      color: props.gameData.color,\r\n      createdAt: FieldValue.serverTimestamp(),\r\n      uid: props.uid\r\n    }).then(() => {\r\n      placed[(y-26)/35][(x-26)/35] = 1\r\n      setPlaced(placed) \r\n      \r\n      var win = checkwin()\r\n      if(win){\r\n        console.log('won')\r\n        props.socket.emit('wonGame', props.gameData.otherUid)\r\n        setGameInfo(props.name + ' wins!')\r\n        //firestore.collection('games').doc(props.gameData.docID).update({winner: props.uid})\r\n      }\r\n    })\r\n  }\r\n\r\n  function drawPiece(x, y, color){\r\n    var context = canvasRef.current.getContext('2d')\r\n    context.fillStyle = color\r\n    context.beginPath();\r\n    context.arc(x+7.5, y+7.5, 12, 0, 2 * Math.PI);\r\n    context.closePath();\r\n    context.fill()\r\n  }\r\n\r\n  function reInitBoard(){\r\n    var context = canvasRef.current.getContext('2d')\r\n    context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height)\r\n    drawBoard()\r\n  }\r\n\r\n  function drawBoard(){\r\n    var context = canvasRef.current.getContext('2d')\r\n    // Box width\r\n    var bw = 630;\r\n    // Box height\r\n    var bh = 630;\r\n    // Padding\r\n    var p = 34;\r\n    context.beginPath()\r\n    for (var x = 0; x <= bw; x += 35) {\r\n        context.moveTo(0.5 + x + p, p);\r\n        context.lineTo(0.5 + x + p, bh + p);\r\n    }\r\n    for (var y = 0; y <= bh; y += 35) {\r\n        context.moveTo(p, 0.5 + y + p);\r\n        context.lineTo(bw + p, 0.5 + y + p);\r\n    }\r\n    context.strokeStyle = \"black\";\r\n    context.stroke();\r\n  }\r\n\r\n\r\n  useEffect(()=>{\r\n      drawBoard()\r\n      console.log('drawing board')\r\n      var movesRef = firestore.collection('games').doc(props.gameData.docID).collection('moves')\r\n\r\n      //on board render, draw out every move so far\r\n      movesRef.get().then(query=>{\r\n          query.forEach(doc => {\r\n            drawPiece(doc.data().x, doc.data().y, doc.data().color)\r\n          })\r\n      })\r\n      props.socket.on('lostGame', () =>{\r\n        console.log('lost')\r\n        setGameInfo(props.opponentName + ' wins!')\r\n        setTurn(false)\r\n      })\r\n      props.socket.on('rematchRequested', () => {\r\n        setGameInfo(props.opponentName + ' wants to rematch!')\r\n        setRequestedRematch(true)\r\n        setIsNewGame(true)\r\n      })\r\n\r\n      props.socket.on('startRematch', () => {\r\n        //reinit game\r\n        let newArray = Array.from({length: 10},()=> Array.from({length: 10}, () => 0))\r\n        setPlaced(newArray)\r\n        setGameInfo(undefined)\r\n        reInitBoard()\r\n        setIsNewGame(true)\r\n        setTurn(true)\r\n        //remove every document from moves collection\r\n        movesRef.get().then(query => {\r\n          query.docs.forEach(doc => {\r\n            movesRef.doc(doc.id).delete()\r\n          })\r\n        })\r\n      })\r\n\r\n      props.socket.on('opponentDc', () => {\r\n        setGameInfo(props.opponentName + ' left')\r\n        setOpponentLeft(true)\r\n      })\r\n\r\n  }, [props.opponentName, props.socket, props.gameData.docID, setPlaced, setRequestedRematch])\r\n\r\n  function checkwin(){\r\n      var numConsecHorizontal = 0;\r\n      for(var j = 0; j < 20; j++){\r\n        for(var i = 0; i <= 20; i++){\r\n          if(placed[j][i] === 1 && placed[j][i+1] === 1){\r\n            numConsecHorizontal++\r\n            if(numConsecHorizontal === 4){\r\n              return 'win';\r\n            }\r\n          }else{\r\n            numConsecHorizontal = 0;\r\n          }\r\n        }\r\n      }\r\n    \r\n      var numConsecVertical = 0;\r\n      for(j = 0; j < 20; j++){\r\n        for(i = 0; i < 20; i++){\r\n          if(placed[i][j] === 1 && placed[i+1][j] === 1){\r\n            numConsecVertical++\r\n            if(numConsecVertical === 4){\r\n              return 'win';\r\n            }\r\n          }else{\r\n            numConsecVertical = 0;\r\n          }\r\n    \r\n        }\r\n      }\r\n      //checking left diagonals\r\n      var UpperConsecDiagonal = 0;\r\n      var LowerConsecDiagonal = 0;\r\n      for(j = 0; j < 20; j++){\r\n        for(i = 0; i < 20-j; i++){\r\n          if(placed[i][i+j] === 1 && placed[i+1][i+1+j] === 1){\r\n            UpperConsecDiagonal++;\r\n            if(UpperConsecDiagonal === 4){\r\n              return 'win';\r\n            }\r\n          }else{\r\n            UpperConsecDiagonal = 0;\r\n          }\r\n        }\r\n        for(i = 0; i < 20-j; i++){\r\n          if(placed[i+j][i] === 1 && placed[i+1+j][i+1] === 1){\r\n            LowerConsecDiagonal++;\r\n            if(LowerConsecDiagonal === 4){\r\n              return 'win';\r\n            }\r\n          }else{\r\n            LowerConsecDiagonal = 0;\r\n          }\r\n        }\r\n      }\r\n    \r\n      var k\r\n      for(i = 0; i < 19; i++){\r\n        for(j = 19, k = 0; j >= 0; k++, j--){\r\n          if(placed[k][j-i] === 1 && placed[k+1][j-1-i] === 1){\r\n            UpperConsecDiagonal++;\r\n            if(UpperConsecDiagonal === 4){\r\n              return 'win';\r\n            }\r\n          }else{\r\n            UpperConsecDiagonal = 0;\r\n          }\r\n        }\r\n    \r\n        for(j = 19, k = 1; k+i < 19; k++, j--){\r\n          if(placed[k+i][j] === 1 && placed[k+i+1][j-1] === 1){\r\n            LowerConsecDiagonal++;\r\n            if(LowerConsecDiagonal === 4){\r\n              return 'win';\r\n            }\r\n          }else{\r\n            LowerConsecDiagonal = 0;\r\n          }\r\n        }\r\n      }\r\n    \r\n      return 0;\r\n  }\r\n\r\n  function requestRematch(){\r\n    if(requestedRematch){\r\n      props.socket.emit('acceptRematch', props.gameData.otherUid)\r\n      //reinit game\r\n      let newArray = Array.from({length: 10},()=> Array.from({length: 10}, () => 0))\r\n      setPlaced(newArray)\r\n      setTurn(false)\r\n      setGameInfo(undefined)\r\n      reInitBoard()\r\n    }else{\r\n      props.socket.emit('requestRematch', props.gameData.otherUid)\r\n      setGameInfo('Rematch Requested')\r\n      document.getElementById('rematchBtn').style.display = 'none'\r\n    }\r\n  }\r\n\r\n  return(\r\n      <div id = 'gameWrapper'>\r\n        <div>\r\n          {gameInfo &&\r\n            <div id = 'gameResultWrapper'> \r\n              <p id = 'gameResult'>{gameInfo}</p>\r\n              {!opponentLeft && <button id = 'rematchBtn' onClick = {requestRematch}>rematch</button>}\r\n              <button id = 'leaveBtn' onClick = {props.leaveMatch}>leave</button>\r\n            </div>\r\n          }\r\n          <canvas ref = {canvasRef} onClick = {handleClick} id = \"omokcanvas\" width = \"700\" height=\"700\" />\r\n          <GameLogic {...props} drawPiece = {drawPiece} setTurn = {setTurn} isNewGame = {isNewGame} setIsNewGame = {setIsNewGame}/> \r\n        </div>\r\n          <BoardChat {...props}/>\r\n      </div> \r\n  )\r\n    \r\n}\r\n\r\nexport default Board","C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Play\\BoardFuncs.js",["115","116","117","118","119","120","121","122","123","124","125","126","127","128","129"],"C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\GameProvider.js",[],["130","131"],"C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Play\\GameLogic.js",[],["132","133"],"C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\SignIn\\SignOut.js",[],"C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\SignIn\\SignIn.js",[],"C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Feed\\Feed.js",["134","135"],"import Post from './Post'\r\nimport { firestore, FieldValue, storage } from '../../firebase'\r\nimport picture from '../../images/picture1.png'\r\nimport cancel from '../../images/cancel.png'\r\nimport { useState, useEffect, useRef } from 'react'\r\n\r\nfunction Feed(props){\r\n    var [postImage, setPostImage] = useState()\r\n\r\n    function sendPost(e){\r\n        if(e.key === 'Enter'){\r\n            e.preventDefault();\r\n            post()\r\n        }\r\n    }\r\n\r\n    async function post(){\r\n        const msg = document.getElementById('postArea').value\r\n        if(msg === ''){\r\n            return\r\n        }\r\n        document.getElementById('postArea').value = ''\r\n\r\n        const postsRef = firestore.collection('posts')\r\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n        const current = new Date()\r\n        const today = months[current.getMonth()] + ' ' + current.getDate()\r\n        const data = {\r\n            uid: props.uid,\r\n            text: msg,\r\n            createdAt: FieldValue.serverTimestamp(),\r\n            time: today,\r\n            likes: 0,\r\n            comments: 0\r\n        }\r\n        const res = await postsRef.add(data)\r\n\r\n        const image = new Promise(resolve => {\r\n            if(document.querySelector(\"#postImage\").files[0] !== undefined){\r\n                resolve()\r\n            }\r\n        })\r\n\r\n        image.then(()=>{\r\n            const file = document.querySelector(\"#postImage\").files[0]\r\n            const ref = storage.ref()\r\n            const task = ref.child(res.id).put(file)\r\n            task.then(() => {\r\n                firestore.collection('posts').doc(res.id)\r\n                .update({                    \r\n                    photo: 'yes'\r\n                }) \r\n            })\r\n            removeImage()\r\n        })\r\n    }   \r\n\r\n    function showUploadedImage(){\r\n        const reader = new FileReader()\r\n        const file = document.querySelector('#postImage').files[0]\r\n        //if file is image\r\n        if(file && file['type'].split('/')[0] === 'image'){\r\n            reader.readAsDataURL(file)\r\n        }\r\n        reader.addEventListener(\"load\", function () {\r\n            // convert image file to base64 string\r\n            setPostImage(<div id = 'postImageWrapper'>\r\n                            <img id = \"removeImageBtn\" src = {cancel} onClick = {removeImage} alt = 'removeImage'/>\r\n                            <img id = \"uploadedPic\" src = {reader.result}alt = \"uploadPic\"/>\r\n                            <button id = 'postBtn' onClick = {post}>Post</button>\r\n                        </div>)\r\n        }, false)\r\n    }\r\n\r\n    function removeImage(){\r\n        document.getElementById('postImage').value = \"\";\r\n        setPostImage()\r\n    }\r\n\r\n    function homeClick(){\r\n        document.getElementById('content').scrollTop = 0\r\n    }\r\n    \r\n    return(\r\n        <div id = \"feedWrapper\">\r\n            <div id = \"homeHeader\" style = {{position: props.position}}>\r\n                <p style = {{cursor: 'pointer', width: '60px', fontSize: '22px'}}onClick = {homeClick}>Home</p>\r\n            </div>\r\n            <div id = \"feed\">\r\n                <div id = \"postInput\">\r\n                    <div style = {{display: 'flex', alignItems: 'center', width: '100%', height: '43px'}}>\r\n                        <form>\r\n                            <label>\r\n                                <img id = \"uploadPic\" src={picture} alt = \"uploadPic\"/> \r\n                                <input id = \"postImage\" onChange={showUploadedImage} type=\"file\" style = {{display:\"none\"}}/>\r\n                            </label>\r\n                        </form>\r\n                        <textarea id='postArea' placeholder='post something!' onKeyDown = {sendPost} type=\"text\" autoComplete=\"off\"></textarea>\r\n                    </div>  \r\n                    {postImage}\r\n                </div>\r\n                {!props.posts ? <div id = \"loader\"></div> : props.posts.map( (post, index, self) => {\r\n                    return <Post key = {post.id} name = {post.name} profilePhoto = {post.profilePic} text = {post.text} time = {post.time} photo = {post.photo ? post.photo: undefined} uid = {post.uid} docId = {post.id}/>\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed","C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Feed\\Post.js",[],"C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\RightSidebar\\User.js",[],"C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\Feed\\Comment.js",[],["136","137"],"C:\\Users\\justin\\Desktop\\mongreact\\client\\src\\components\\RightSidebar\\OnlineSidebar.js",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"138","replacedBy":"142"},{"ruleId":"140","replacedBy":"143"},{"ruleId":"138","replacedBy":"144"},{"ruleId":"140","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":9,"column":23,"nodeType":"148","messageId":"149","endLine":9,"endColumn":30},{"ruleId":"146","severity":1,"message":"150","line":9,"column":32,"nodeType":"148","messageId":"149","endLine":9,"endColumn":37},{"ruleId":"138","replacedBy":"151"},{"ruleId":"140","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":172,"column":6,"nodeType":"155","endLine":172,"endColumn":94,"suggestions":"156"},{"ruleId":"146","severity":1,"message":"157","line":1,"column":10,"nodeType":"148","messageId":"149","endLine":1,"endColumn":19},{"ruleId":"146","severity":1,"message":"158","line":1,"column":21,"nodeType":"148","messageId":"149","endLine":1,"endColumn":31},{"ruleId":"146","severity":1,"message":"159","line":5,"column":12,"nodeType":"148","messageId":"149","endLine":5,"endColumn":20},{"ruleId":"160","severity":2,"message":"161","line":9,"column":12,"nodeType":"148","messageId":"162","endLine":9,"endColumn":18},{"ruleId":"160","severity":2,"message":"161","line":9,"column":34,"nodeType":"148","messageId":"162","endLine":9,"endColumn":40},{"ruleId":"160","severity":2,"message":"161","line":23,"column":12,"nodeType":"148","messageId":"162","endLine":23,"endColumn":18},{"ruleId":"160","severity":2,"message":"161","line":23,"column":34,"nodeType":"148","messageId":"162","endLine":23,"endColumn":40},{"ruleId":"160","severity":2,"message":"161","line":39,"column":12,"nodeType":"148","messageId":"162","endLine":39,"endColumn":18},{"ruleId":"160","severity":2,"message":"161","line":39,"column":36,"nodeType":"148","messageId":"162","endLine":39,"endColumn":42},{"ruleId":"160","severity":2,"message":"161","line":49,"column":12,"nodeType":"148","messageId":"162","endLine":49,"endColumn":18},{"ruleId":"160","severity":2,"message":"161","line":49,"column":36,"nodeType":"148","messageId":"162","endLine":49,"endColumn":42},{"ruleId":"160","severity":2,"message":"161","line":65,"column":12,"nodeType":"148","messageId":"162","endLine":65,"endColumn":18},{"ruleId":"160","severity":2,"message":"161","line":65,"column":36,"nodeType":"148","messageId":"162","endLine":65,"endColumn":42},{"ruleId":"160","severity":2,"message":"161","line":77,"column":12,"nodeType":"148","messageId":"162","endLine":77,"endColumn":18},{"ruleId":"160","severity":2,"message":"161","line":77,"column":36,"nodeType":"148","messageId":"162","endLine":77,"endColumn":42},{"ruleId":"138","replacedBy":"163"},{"ruleId":"140","replacedBy":"164"},{"ruleId":"138","replacedBy":"165"},{"ruleId":"140","replacedBy":"166"},{"ruleId":"146","severity":1,"message":"167","line":5,"column":20,"nodeType":"148","messageId":"149","endLine":5,"endColumn":29},{"ruleId":"146","severity":1,"message":"168","line":5,"column":31,"nodeType":"148","messageId":"149","endLine":5,"endColumn":37},{"ruleId":"138","replacedBy":"169"},{"ruleId":"140","replacedBy":"170"},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],["171"],["172"],["171"],["172"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.",["171"],["172"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'reInitBoard'. Either include it or remove the dependency array.","ArrayExpression",["173"],"'firestore' is defined but never used.","'FieldValue' is defined but never used.","'checkwin' is defined but never used.","no-undef","'placed' is not defined.","undef",["171"],["172"],["171"],["172"],"'useEffect' is defined but never used.","'useRef' is defined but never used.",["171"],["172"],"no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},"Update the dependencies array to be: [props.opponentName, props.socket, props.gameData.docID, setPlaced, setRequestedRematch, reInitBoard]",{"range":"176","text":"177"},[4837,4925],"[props.opponentName, props.socket, props.gameData.docID, setPlaced, setRequestedRematch, reInitBoard]"]